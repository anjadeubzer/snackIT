{"version":3,"sources":["components/NavBar.js","components/Snack/SnackItem.js","components/HelperFunctions/formatPrice.js","components/Snack/SnackList.js","components/Cart/Cart.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","withStyles","theme","cardmedia","height","paddingTop","backgroundColor","props","_props$snack$meta","snack","meta","snack_brand","snack_price","snack_size","snack_description","title","classes","className","Card_default","CardMedia_default","image","index","rendered","CardContent_default","component","gutterBottom","CardActions_default","Button_default","size","toLocaleString","style","currency","SnackList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","snacks","searchString","getSnackItems","fetch","then","res","json","setState","_this2","TextField_default","padding","id","placeholder","margin","onChange","onSearchInputChange","Grid_default","container","spacing","keys","map","key","item","xs","sm","lg","xl","Snack_SnackItem","Component","fab","unit","Fab_default","aria-label","ShoppingBasket_default","App","components_NavBar","Snack_SnackList","components_Cart_Cart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c60f7c8.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst NavBar = () => {\n\treturn(\n\t\t<div>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant=\"title\" color=\"inherit\">\n\t\t\t\t\t\tSnackIT App\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n\nexport default NavBar;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\n//helper function\nimport { formatPrice } from '../HelperFunctions/formatPrice';\n\n// material ui styles - test\nimport { withStyles } from '@material-ui/core/styles';\n\n\n// material ui components\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst styles = theme => ({\n\tcardmedia: {\n\t\theight: 0,\n\t\tpaddingTop: '26.25%',\n\t\tbackgroundColor: 'red',\n\t},\n});\n\nconst SnackItem = ( props ) => {\n\n\t// activating css in js\n\t// const classes = useStyles();\n\n\t// set up variables\n\tconst { snack_brand, snack_price, snack_size, snack_description, } = props.snack.meta;\n\tconst { title } = props.snack;\n\tconst { classes } = props;\n\n    return (\n        <div className=\"snack-item\">\n            <h3 className=\"snack-name\">\n                { props.snack ? (\n                    <Card>\n                        <CardMedia className={classes.cardmedia}\n                            image={ \"https://placeimg.com/640/480/nature/\" + props.index}\n                            // image={ props.snack._embedded['wp:featuredmedia'][0].media_details.sizes.large.source_url }\n                            title={ title.rendered }\n                        />\n                        <CardContent>\n\t\t\t\t\t\t\t<Typography variant=\"headline\" component=\"h2\">\n\t\t\t\t\t\t\t\t{ title.rendered }\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography gutterBottom variant=\"headline\" component=\"h3\">\n\t\t\t\t\t\t\t\t{ snack_brand }\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"p\">\n\t\t\t\t\t\t\t\t{ snack_size } <br/>\n\t\t\t\t\t\t\t\t{ snack_description }\n\t\t\t\t\t\t\t</Typography>\n                        </CardContent>\n\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\">\n\t\t\t\t\t\t\t\t{ formatPrice( snack_price ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</CardActions>\n                    </Card>\n                ) : null }\n\n            </h3>\n            {/*<button onClick={this.handleClick} disabled={!isAvailable}>{isAvailable ? 'Add To Order' : 'Sold out!'}</button>*/}\n        </div>\n    );\n};\n\n// SnackItem.propTypes = { classes: PropTypes.object.isRequired };\n\n\nexport default withStyles(styles)(SnackItem);","// import React from 'react';\n\nexport function formatPrice(cents) {\n\treturn (cents / 100).toLocaleString(\"de-DE\", {\n\t\tstyle: \"currency\",\n\t\tcurrency: \"EUR\"\n\t});\n}","import React, { Component } from 'react';\n\n// material ui components\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\n// child component snackItem\nimport SnackItem from '../Snack/SnackItem';\n\n\n\nclass SnackList extends Component {\n\n\tstate = {\n\t\tsnacks: [],\n\t\tsearchString: ''\n\t};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.getSnackItems();\n\t};\n\n\n\tgetSnackItems = () => {\n\t\t// let dataURL = \"http://hackathon.local/wp-json/wp/v2/snack?_embed\";\n\t\t// let dataURL = \"http://hackathon.local/wp-json/wp/v2/snack\";\n\t\tlet dataURL = \"https://snackit.ritapbest.io/wp-json/wp/v2/snack\";\n\n\t\tfetch(dataURL)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tthis.setState({ snacks: res })\n\t\t\t})\n\t};\n\n\n\trender() {\n\t\treturn(\n\t\t\t<div>{ this.state.snacks ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<TextField style={ { padding: 24 } }\n\t\t\t\t\t\t\t\t\t   id=\"searchInput\"\n\t\t\t\t\t\t\t\t\t   placeholder={\"Search for Snacks\"}\n\t\t\t\t\t\t\t\t\t   margin=\"normal\"\n\t\t\t\t\t\t\t\t\t   onChange={ this.onSearchInputChange }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/*<TagCloudFilter>*/}\n\t\t\t\t\t\t\t<Grid container spacing={24} style={{padding: 24}}>\n\t\t\t\t\t\t\t\t{Object.keys( this.state.snacks ).map( key => (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} lg={4} xl={2} key={ key } index={ key }>\n\t\t\t\t\t\t\t\t\t\t<SnackItem snack={ this.state.snacks[key] }/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : <div>'No Snacks here'</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default SnackList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// material ui styles - test\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\n\nconst styles = theme => ({\n\tfab: {\n\t\tmargin: theme.spacing.unit,\n\t},\n});\n\nconst Cart = props => {\n\n\tconst { classes } = props;\n\treturn (\n\t\t<div>\n\t\t\t<Fab color=\"secondary\" aria-label=\"Add\" className={classes.fab}>\n\t\t\t\t<ShoppingBasket />\n\t\t\t</Fab>\n\t\t</div>\n\t);\n};\n\nCart.propTypes = { classes: PropTypes.object.isRequired };\n\nexport default withStyles(styles)(Cart);","import React, { Component } from 'react';\n\n// main components\nimport NavBar from './components/NavBar';\nimport SnackList from './components/Snack/SnackList';\nimport Cart from './components/Cart/Cart';\n\n// styles\nimport './App.css';\n\n\n\nclass App extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"SnackIT\">\n\t\t\t\t<NavBar />\n\t\t\t\t<header className=\"SnackIT-header\">\n\t\t\t\t\t<h1>SnackIT</h1>\n\t\t\t\t\t<h3>Hello, these are the Snacks:</h3>\n\n\t\t\t\t</header>\n\t\t\t\t<SnackList />\n\t\t\t\t{/*{snacks}*/}\n\t\t\t\t<Cart/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}